WHERE cntry = 'HU' AND edlvdahu <= 14
ORDER BY agea DESC")
#only showing disticnt ages and eduation in our dataset
sqldf("SELECT *
FROM hu_ess")
sqldf("SELECT DISTINCT agea edlvdahu
FROM hu_ess
")
sqldf("SELECT DISTINCT agea, edlvdahu
FROM hu_ess
")
sqldf("SELECT DISTINCT edlvdahu
FROM hu_ess
")
hu_ess <- sqldf("SELECT cntry, agea, gndr, edlvdahu
FROM ess
WHERE cntry = 'HU' AND edlvdahu <= 14
ORDER BY agea")
#only showing disticnt ages and eduation in our dataset
sqldf("SELECT DISTINCT agea
FROM hu_ess
")
sqldf("SELECT DISTINCT edlvdahu
FROM hu_ess")
sqldf("SELECT DISTINCT edlvdahu
FROM hu_ess
ORDER BY edlvdahu")
library(tidyverse)
library(readxl)
library(sqldf)
ess <- read_csv("Data/ESS10.csv", show_col_types = FALSE)
#cntry agea gndr edlvdahu (highest level education hungary)
hu_ess <- sqldf("SELECT cntry, agea, gndr, edlvdahu
FROM ess
WHERE cntry = 'HU' AND edlvdahu <= 14
ORDER BY agea")
#only showing disticnt ages and eduation in our dataset
sqldf("SELECT DISTINCT agea
FROM hu_ess")
sqldf("SELECT DISTINCT edlvdahu
FROM hu_ess
ORDER BY edlvdahu")
#cntry agea gndr edlvdahu (highest level education hungary)
hu_ess <- sqldf("SELECT cntry, agea, gndr, edlvdahu, hinctnta
FROM ess
WHERE cntry = 'HU' AND edlvdahu <= 14
ORDER BY agea")
#only showing disticnt ages and eduation in our dataset
sqldf("SELECT DISTINCT agea
FROM hu_ess")
sqldf("SELECT DISTINCT edlvdahu
FROM hu_ess
ORDER BY edlvdahu")
View(hu_ess)
#cntry agea gndr edlvdahu (highest level education hungary)
hu_ess <- sqldf("SELECT cntry, agea, gndr, edlvdahu, hinctnta
FROM ess
WHERE cntry = 'HU' AND edlvdahu <= 14 AND hinctnta <= 10
ORDER BY agea")
#only showing disticnt ages and eduation in our dataset
sqldf("SELECT DISTINCT agea
FROM hu_ess")
sqldf("SELECT DISTINCT edlvdahu
FROM hu_ess
ORDER BY edlvdahu")
View(hu_ess)
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
result <- sqldf("SELECT *, mean(agea) AS mean_age FROM hu_ess GROUP BY edlvdahu HAVING mean(agea) > 20")
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
result <- sqldf("SELECT *, AVG(agea) AS mean_age FROM hu_ess GROUP BY edlvdahu HAVING AVG(agea) > 20")
View(result)
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
result <- sqldf("SELECT *, AVG(hinctnta) AS mean_income FROM hu_ess GROUP BY edlvdahu HAVING agea > 20")
View(result)
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
result <- sqldf("SELECT *, AVG(hinctnta) AS mean_income FROM hu_ess GROUP BY edlvdahu where agea > 20")
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
result <- sqldf("SELECT *, AVG(hinctnta) AS mean_income FROM hu_ess GROUP BY edlvdahu HAVING agea > 20")
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
result <- sqldf("SELECT *, AVG(hinctnta) AS mean_income FROM hu_ess GROUP BY edlvdahu WHERE agea > 20")
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
result <- sqldf("SELECT *, AVG(hinctnta) AS mean_income FROM hu_ess GROUP BY edlvdahu HAVING agea > 20")
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
result <- sqldf("SELECT *, AVG(hinctnta) AS mean_income FROM hu_ess GROUP BY agea HAVING agea > 20")
View(result)
View(result)
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess GROUP BY agea HAVING agea > 20")
sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess WHERE agea > 20 GROUP BY agea")
sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess HAVING agea > 20 GROUP BY agea")
sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess GROUP BY agea WHERE agea > 20")
rm(result)
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
#Both achieve the same result
hum <- sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess GROUP BY agea WHERE agea > 20")
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
#Both achieve the same result
hum <- sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess GROUP BY agea HAVING agea > 20")
sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess WHERE agea > 20 GROUP BY agea")
ggplot(hum (aes()))
View(hum)
ggplot(hum (aes(agea, mean_income))) +
geom_point()
ggplot(hum, (aes(agea, mean_income))) +
geom_point()
ggplot(hum, (aes(agea, mean_income))) +
geom_point() +
geom_smooth()
ggplot(hum, (aes(agea, mean_income))) +
geom_point() +
geom_smooth() +
theme_base()
ggplot(hum, (aes(agea, mean_income))) +
geom_point() +
geom_smooth() +
theme_base()
library(tidyverse)
library(readxl)
library(sqldf)
library(ggthemes)
ess <- read_csv("Data/ESS10.csv", show_col_types = FALSE)
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
#Both achieve the same result
hum <- sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess GROUP BY agea HAVING agea > 20")
sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess WHERE agea > 20 GROUP BY agea")
ggplot(hum, (aes(agea, mean_income))) +
geom_point() +
geom_smooth() +
theme_base()
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
#Both achieve the same result
hum <- sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess GROUP BY agea HAVING agea > 20")
sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess WHERE agea > 20 GROUP BY agea")
ggplot(hum, (aes(agea, mean_income))) +
geom_point() +
geom_smooth() +
labs(title = "Income by Age",
xlab = "Age",
ylab = "Mean Income") +
theme_base()
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
#Both achieve the same result
hum <- sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess GROUP BY agea HAVING agea > 20")
sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess WHERE agea > 20 GROUP BY agea")
ggplot(hum, (aes(agea, mean_income))) +
geom_point() +
geom_smooth() +
labs(title = "Income by Age",
x = "Age",
y = "Mean Income") +
theme_base()
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
#Both achieve the same result
hum <- sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess GROUP BY agea HAVING agea > 20")
sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess WHERE agea > 20 GROUP BY agea")
ggplot(hum, (aes(agea, mean_income))) +
geom_point() +
geom_smooth() +
smooth_data <- ggplot_build(gg)$data[[2]]
# Create your ggplot object
gg <- ggplot(hum, aes(agea, mean_income)) +
geom_point() +
geom_smooth()
# Extract the data from the smoothed curve
smooth_data <- ggplot_build(gg)$data[[2]]
# Find the maximum y value
max_y <- max(smooth_data$y)
# Print the maximum y value
print(max_y)
gg <- ggplot(hum, aes(agea, mean_income)) +
geom_point() +
geom_smooth()
View(gg)
print(max_y)
max_x <- max(smooth_data$x)
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
#Both achieve the same result
hum <- sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess GROUP BY agea HAVING agea > 20")
sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess WHERE agea > 20 GROUP BY agea")
# Create your ggplot object
gg <- ggplot(hum, aes(agea, mean_income)) +
geom_point() +
geom_smooth()
# Extract the data from the smoothed curve
smooth_data <- ggplot_build(gg)$data[[2]]
# Find the maximum y value
max_y <- max(smooth_data$y)
ggplot(hum, (aes(agea, mean_income))) +
geom_point() +
geom_smooth() +
labs(title = "Income by Age",
x = "Age",
y = "Mean Income") +
geom_hline(xintercept = max_y) +
theme_base()
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
#Both achieve the same result
hum <- sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess GROUP BY agea HAVING agea > 20")
sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess WHERE agea > 20 GROUP BY agea")
# Create your ggplot object
gg <- ggplot(hum, aes(agea, mean_income)) +
geom_point() +
geom_smooth()
# Extract the data from the smoothed curve
smooth_data <- ggplot_build(gg)$data[[2]]
# Find the maximum y value
max_y <- max(smooth_data$y)
ggplot(hum, (aes(agea, mean_income))) +
geom_point() +
geom_smooth() +
labs(title = "Income by Age",
x = "Age",
y = "Mean Income") +
geom_hline(yintercept = max_y) +
theme_base()
View(smooth_data)
ggplot_build(gg)$data[[1]]
ggplot_build(gg)$data[[0]]
ggplot_build(gg)$data[[2]]
ggplot_build(gg)$data[[3]]
View(smooth_data)
max(smooth_data$y)
max_x <- smooth_data$group[smooth_data$y == max_y]
# Find the maximum y value
max_y <- max(smooth_data$y)
# Find the corresponding x value
max_x <- smooth_data$group[smooth_data$y == max_y]
# Print the maximum x value
print(max_x)
# Find the corresponding x value
x_max <- smooth_data$y[which.max(smooth_data$y)]
max_x <- smooth_data$x[which(smooth_data$y == x_max)]
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
#Both achieve the same result
hum <- sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess GROUP BY agea HAVING agea > 20")
sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess WHERE agea > 20 GROUP BY agea")
# Creating ggplot object
gg <- ggplot(hum, aes(agea, mean_income)) +
geom_point() +
geom_smooth()
# Extract the data from the smoothed curve
smooth_data <- ggplot_build(gg)$data[[2]]
# Find the maximum y value
max_y <- max(smooth_data$y)
max_x <- smooth_data$x[which(smooth_data$y == max_y)]
ggplot(hum, (aes(agea, mean_income))) +
geom_point() +
geom_smooth() +
labs(title = "Income by Age",
x = "Age",
y = "Mean Income") +
geom_hline(yintercept = max_y) +
theme_base()
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
#Both achieve the same result
hum <- sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess GROUP BY agea HAVING agea > 20")
sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess WHERE agea > 20 GROUP BY agea")
# Creating ggplot object
gg <- ggplot(hum, aes(agea, mean_income)) +
geom_point() +
geom_smooth()
# Extract the data from the smoothed curve
smooth_data <- ggplot_build(gg)$data[[2]]
# Find the maximum y value
max_y <- max(smooth_data$y)
max_x <- smooth_data$x[which(smooth_data$y == max_y)]
ggplot(hum, (aes(agea, mean_income))) +
geom_point() +
geom_smooth() +
labs(title = "Income by Age",
x = "Age",
y = "Mean Income") +
geom_hline(yintercept = max_y) +
geom_vline(xintercept = max_x) +
theme_base()
library(tidyverse)
library(readxl)
library(sqldf)
library(ggthemes)
ess <- read_csv("Data/ESS10.csv", show_col_types = FALSE)
#cntry agea gndr edlvdahu (highest level education hungary)
hu_ess <- sqldf("SELECT cntry, agea, gndr, edlvdahu, hinctnta
FROM ess
WHERE cntry = 'HU' AND edlvdahu <= 14 AND hinctnta <= 10
ORDER BY agea")
#only showing disticnt ages and eduation in our dataset
sqldf("SELECT DISTINCT agea
FROM hu_ess")
sqldf("SELECT DISTINCT edlvdahu
FROM hu_ess
ORDER BY edlvdahu")
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
#Both achieve the same result
hum <- sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess GROUP BY agea HAVING agea > 20")
sqldf("SELECT agea, AVG(hinctnta) AS mean_income FROM hu_ess WHERE agea > 20 GROUP BY agea")
# Creating ggplot object
gg <- ggplot(hum, aes(agea, mean_income)) +
geom_point() +
geom_smooth()
# Extract the data from the smoothed curve
smooth_data <- ggplot_build(gg)$data[[2]]
# Find the maximum y value
max_y <- max(smooth_data$y)
max_x <- smooth_data$x[which(smooth_data$y == max_y)]
ggplot(hum, (aes(agea, mean_income))) +
geom_point() +
geom_smooth() +
labs(title = "Income by Age",
x = "Age",
y = "Mean Income") +
geom_hline(yintercept = max_y) +
geom_vline(xintercept = max_x) +
theme_base()
View(hu_ess)
sqldf("SELECT gndr, AVG(hinctnta) AS mean_income
FROM hu_ess
GROUP BY gndr")
sqldf("SELECT gndr, AVG(hinctnta) AS mean_income
FROM hu_ess
GROUP BY gndr agea")
sqldf("SELECT gndr, AVG(hinctnta) AS mean_income
FROM hu_ess
GROUP BY gndr, agea")
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
#Both achieve the same result
hum <- sqldf("SELECT agea, AVG(hinctnta) AS mean_income
FROM hu_ess
GROUP BY agea
HAVING agea > 20")
sqldf("SELECT agea, AVG(hinctnta) AS mean_income
FROM hu_ess
WHERE agea > 20
GROUP BY agea")
# Creating ggplot object
gg <- ggplot(hum, aes(agea, mean_income)) +
geom_point() +
geom_smooth()
# Extract the data from the smoothed curve
smooth_data <- ggplot_build(gg)$data[[2]]
# Find the maximum y value
max_y <- max(smooth_data$y)
#Finding the assoicated x value based on max_y
max_x <- smooth_data$x[which(smooth_data$y == max_y)]
# The plot
ggplot(hum, (aes(agea, mean_income))) +
geom_point() +
geom_smooth() +
labs(title = "Income by Age",
x = "Age",
y = "Mean Income") +
geom_hline(yintercept = max_y) +
geom_vline(xintercept = max_x) +
theme_base()
sqldf("SELECT agea gndr, AVG(hinctnta) AS mean_income
FROM hu_ess
GROUP BY gndr, agea")
sqldf("SELECT agea, gndr, AVG(hinctnta) AS mean_income
FROM hu_ess
GROUP BY gndr, agea")
humm2 <- sqldf("SELECT agea, gndr, AVG(hinctnta) AS mean_income
FROM hu_ess
GROUP BY gndr, agea")
View(humm2)
ggplot(humm2, aes(agea, mean_income, group_by(gndr))) +
geom_point() +
geom_smooth()
ggplot(humm2, aes(agea, mean_income)) +
geom_point(group_by(gndr)) +
geom_smooth()
ggplot(humm2, aes(agea, mean_income)) +
geom_point() +
geom_smooth(fill = gndr)
ggplot(humm2, aes(agea, mean_income)) +
geom_point() +
geom_smooth(fill = "gndr")
ggplot(humm2, aes(agea, mean_income, color = gndr)) +
geom_point() +
geom_smooth()
ggplot(humm2, aes(agea, mean_income, group = gndr)) +
geom_point() +
geom_smooth()
ggplot(humm2, aes(x = agea, y = mean_income, color = gndr)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE) +
labs(
x = "Age",
y = "Mean Income",
color = "Gender"
) +
theme_minimal()
ggplot(humm2, aes(x = agea, y = mean_income, group = gndr)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x, se = FALSE) +
labs(
x = "Age",
y = "Mean Income",
color = "Gender"
) +
theme_minimal()
ggplot(humm2, aes(x = agea, y = mean_income, group = gndr)) +
geom_point() +
geom_smooth() +
labs(
x = "Age",
y = "Mean Income",
color = "Gender"
) +
theme_minimal()
ggplot(humm2, aes(x = agea, y = mean_income, group = gndr, color = gndr)) +
geom_point() +
geom_smooth() +
labs(
x = "Age",
y = "Mean Income",
color = "Gender"
) +
theme_minimal()
#Income grouped by age and gender
humm2 <- sqldf("SELECT agea, gndr, AVG(hinctnta) AS mean_income
FROM hu_ess
GROUP BY gndr, agea")
#Handling the conversion of the variable gender into a factor variable
humm2$gndr <- factor(humm2$gndr, levels = c(1, 2), labels = c("Male", "Female"))
ggplot(humm2, aes(x = agea, y = mean_income, group = gndr, color = gndr)) +
geom_point() +
geom_smooth() +
labs(
x = "Age",
y = "Mean Income",
color = "Gender"
) +
theme_minimal()
#Income grouped by age and gender
humm2 <- sqldf("SELECT agea, gndr, AVG(hinctnta) AS mean_income
FROM hu_ess
GROUP BY gndr, agea")
#Handling the conversion of the variable gender into a factor variable
humm2$gndr <- factor(humm2$gndr, levels = c(1, 2), labels = c("Male", "Female"))
ggplot(humm2, aes(x = agea, y = mean_income, group = gndr, color = gndr)) +
geom_point() +
geom_smooth(se = FALSE) +
labs(
x = "Age",
y = "Mean Income",
color = "Gender"
) +
theme_minimal()
#Income grouped by age and gender
humm2 <- sqldf("SELECT agea, gndr, AVG(hinctnta) AS mean_income
FROM hu_ess
GROUP BY gndr, agea")
#Handling the conversion of the variable gender into a factor variable
humm2$gndr <- factor(humm2$gndr, levels = c(1, 2), labels = c("Male", "Female"))
ggplot(humm2, aes(x = agea, y = mean_income, group = gndr, color = gndr)) +
geom_point() +
geom_smooth(se = FALSE) +
labs(
x = "Age",
y = "Mean Income",
color = "Gender"
) +
theme_base()
View(humm2)
#Income grouped by age and gender
humm2 <- sqldf("SELECT agea, gndr, AVG(hinctnta) AS mean_income
FROM hu_ess
GROUP BY gndr, agea")
#Handling the conversion of the variable gender into a factor variable
humm2$gndr <- factor(humm2$gndr, levels = c(1, 2), labels = c("Male", "Female"))
ggplot(humm2, aes(x = agea, y = mean_income, group = gndr, color = gndr)) +
geom_point() +
geom_smooth(se = FALSE) +
labs(title = "Income over Time by Sex",
x = "Age",
y = "Mean Income",
color = "Gender") +
theme_base()
#Income grouped by age and gender
humm2 <- sqldf("SELECT agea, gndr, AVG(hinctnta) AS mean_income
FROM hu_ess
GROUP BY gndr, agea")
#Handling the conversion of the variable gender into a factor variable
humm2$gndr <- factor(humm2$gndr, levels = c(1, 2), labels = c("Male", "Female"))
ggplot(humm2, aes(x = agea, y = mean_income, group = gndr, color = gndr)) +
geom_point() +
geom_smooth(se = FALSE) +
labs(title = "Income Over Time by Sex",
x = "Age",
y = "Mean Income",
color = "Gender") +
theme_base()

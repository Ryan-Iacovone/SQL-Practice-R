ggplot(hum, (aes(agea, mean_income))) +
geom_point() +
geom_smooth() +
labs(title = "Income by Age",
x = "Age",
y = "Mean Income") +
geom_hline(yintercept = max_y) +
geom_vline(xintercept = max_x) +
theme_base()
#Income grouped by age and gender
humm2 <- sqldf("SELECT agea, gndr, AVG(hinctnta) AS mean_income
FROM hu_ess
GROUP BY gndr, agea")
#Handling the conversion of gender into a factor variable in R instead of sql
humm2$gndr <- factor(humm2$gndr, levels = c(1, 2), labels = c("Male", "Female"))
ggplot(humm2, aes(x = agea, y = mean_income, group = gndr, color = gndr)) +
geom_point() +
geom_smooth(se = FALSE) +
labs(title = "Income Over Time by Sex (Deciles)",
x = "Age",
y = "Mean Income",
color = "Gender") +
scale_color_manual(name = NULL,
values = c("Male" = "blue", "Female" = "hotpink")) +
theme_base()
# Creating a table of average and sum earnings by education
humm3 <- sqldf("SELECT edlvdahu as education_level, AVG(hinctnta) as avg_income, SUM(hinctnta) as sum_income, STDEV(hinctnta) as std, COUNT(*) as total_obs
FROM hu_ess
GROUP BY edlvdahu")
ggplot(humm3, aes(education_level, avg_income)) +
geom_bar(stat = "identity", fill = "lightgreen", color = "black") +
labs(title = "Income by Educaion",
x = "Level of Education",
y = "Mean Income") +
theme_base()
# Creating new tables to be joined together
#Creating an interesting sample set of the ess df to manipute in a clearer manner
# Sample 100 random rows from your existing dataframe df
# Using a random number to generate the seeds
random_number <- sample(1:1000, 2) #179, 672
sample_size <- 20
set.seed(179)
df1 <- ess %>% sample_n(sample_size)
set.seed(672)
df2 <- ess %>% sample_n(sample_size)
#variables: cntry agea gndr edlvdahu (highest level education hungary)
# Inner join
df1_fi <- sqldf("SELECT cntry, agea, gndr, edlvdfi, 1 AS version
FROM df1
WHERE cntry = 'FI'")
sort(unique(df1_fr$agea))
sort(unique(df1_fi$agea))
inner_join_result <- sqldf("SELECT df1_fi.cntry, df1_fi.agea, df1_fi.gndr, df1_fi.edlvdfi, version
FROM df1_fi
INNER JOIN df2 ON df1_fi.cntry = df1_fi.cntry")
View(inner_join_result)
# Load the sqldf package
library(sqldf)
# Create sample dataframes
df1 <- data.frame(ID = c(1, 2, 3, 4, 5),
Name = c("Alice", "Bob", "Charlie", "David", "Eve"))
df2 <- data.frame(ID = c(3, 4, 6, 7, 8),
Department = c("HR", "IT", "Sales", "Finance", "Marketing"))
# Inner Join
inner_join_result <- sqldf("SELECT df1.ID, Name, Department FROM df1
INNER JOIN df2 ON df1.ID = df2.ID")
# Left Join
left_join_result <- sqldf("SELECT df1.ID, Name, Department FROM df1
LEFT JOIN df2 ON df1.ID = df2.ID")
# Right Join
right_join_result <- sqldf("SELECT df1.ID, Name, Department FROM df1
RIGHT JOIN df2 ON df1.ID = df2.ID")
# Full Outer Join
full_outer_join_result <- sqldf("SELECT IFNULL(df1.ID, df2.ID) AS ID, Name, Department FROM df1
FULL OUTER JOIN df2 ON df1.ID = df2.ID")
# Cross Join (Cartesian Product)
cross_join_result <- sqldf("SELECT df1.ID, Name, Department FROM df1
CROSS JOIN df2")
# Display the results
print("Inner Join:")
print(inner_join_result)
print("Left Join:")
print(left_join_result)
print("Right Join:")
print(right_join_result)
print("Full Outer Join:")
print(full_outer_join_result)
print("Cross Join:")
print(cross_join_result)
View(df2)
# Creating new tables to be joined together
#Creating an interesting sample set of the ess df to manipute in a clearer manner
# Sample 100 random rows from your existing dataframe df
# Using a random number to generate the seeds
random_number <- sample(1:1000, 2) #179, 672
sample_size <- 20
set.seed(179)
df1 <- ess %>% sample_n(sample_size)
set.seed(672)
df2 <- ess %>% sample_n(sample_size)
View(df1)
View(df2)
sort(unique(df1_fi$agea))
inner_join_result <- sqldf("SELECT df1_fi.cntry, df1_fi.agea, df1_fi.gndr, df1_fi.edlvdfi, version
FROM df1_fi
INNER JOIN df2 ON df1_fi.cntry = df1_fi.cntry")
View(inner_join_result)
inner_join_result <- sqldf("SELECT df1_fi.cntry, df1_fi.agea, df1_fi.gndr, df1_fi.edlvdfi, version
FROM df1_fi
INNER JOIN df2 ON df1_fi.cntry = df2_fi.cntry")
inner_join_result <- sqldf("SELECT df1_fi.cntry, df1_fi.agea, df1_fi.gndr, df1_fi.edlvdfi, version
FROM df1_fi
INNER JOIN df2 ON df1_fi.cntry = df2.cntry")
library(tidyverse)
library(readxl)
library(sqldf)
library(ggthemes)
ess <- read_csv("Data/ESS10.csv", show_col_types = FALSE)
# SQL to ggplot practice
#cntry agea gndr edlvdahu (highest level education hungary)
hu_ess <- sqldf("SELECT cntry, agea, gndr, edlvdahu, hinctnta
FROM ess
WHERE cntry = 'HU' AND edlvdahu <= 14 AND hinctnta <= 10
ORDER BY agea")
#only showing disticnt ages and eduation in our dataset
sqldf("SELECT DISTINCT agea
FROM hu_ess")
sqldf("SELECT DISTINCT edlvdahu
FROM hu_ess
ORDER BY edlvdahu")
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
#Both achieve the same result
hum <- sqldf("SELECT agea, AVG(hinctnta) AS mean_income
FROM hu_ess
GROUP BY agea
HAVING agea > 20")
sqldf("SELECT agea, AVG(hinctnta) AS mean_income
FROM hu_ess
WHERE agea > 20
GROUP BY agea")
# Creating ggplot object
gg <- ggplot(hum, aes(agea, mean_income)) +
geom_point() +
geom_smooth()
# Extract the data from the smoothed curve
smooth_data <- ggplot_build(gg)$data[[2]]
# Find the maximum y value
max_y <- max(smooth_data$y)
#Finding the assoicated x value based on max_y
max_x <- smooth_data$x[which(smooth_data$y == max_y)]
# The plot
ggplot(hum, (aes(agea, mean_income))) +
geom_point() +
geom_smooth() +
labs(title = "Income by Age",
x = "Age",
y = "Mean Income") +
geom_hline(yintercept = max_y) +
geom_vline(xintercept = max_x) +
theme_base()
#Income grouped by age and gender
humm2 <- sqldf("SELECT agea, gndr, AVG(hinctnta) AS mean_income
FROM hu_ess
GROUP BY gndr, agea")
#Handling the conversion of gender into a factor variable in R instead of sql
humm2$gndr <- factor(humm2$gndr, levels = c(1, 2), labels = c("Male", "Female"))
ggplot(humm2, aes(x = agea, y = mean_income, group = gndr, color = gndr)) +
geom_point() +
geom_smooth(se = FALSE) +
labs(title = "Income Over Time by Sex (Deciles)",
x = "Age",
y = "Mean Income",
color = "Gender") +
scale_color_manual(name = NULL,
values = c("Male" = "blue", "Female" = "hotpink")) +
theme_base()
# Creating a table of average and sum earnings by education
humm3 <- sqldf("SELECT edlvdahu as education_level, AVG(hinctnta) as avg_income, SUM(hinctnta) as sum_income, STDEV(hinctnta) as std, COUNT(*) as total_obs
FROM hu_ess
GROUP BY edlvdahu")
ggplot(humm3, aes(education_level, avg_income)) +
geom_bar(stat = "identity", fill = "lightgreen", color = "black") +
labs(title = "Income by Educaion",
x = "Level of Education",
y = "Mean Income") +
theme_base()
# Creating new tables to be joined together
#Creating an interesting sample set of the ess df to manipute in a clearer manner
# Sample 100 random rows from your existing dataframe df
# Using a random number to generate the seeds
random_number <- sample(1:1000, 2) #179, 672
sample_size <- 20
set.seed(179)
df1 <- ess %>% sample_n(sample_size)
set.seed(672)
df2 <- ess %>% sample_n(sample_size)
#variables: cntry agea gndr edlvdahu (highest level education hungary)
# Inner join
df1_fi <- sqldf("SELECT cntry, agea, gndr, edlvdfi, 1 AS version
FROM df1
WHERE cntry = 'FI'")
sort(unique(df1_fi$agea))
inner_join_result <- sqldf("SELECT df1_fi.cntry, df1_fi.agea, df1_fi.gndr, df1_fi.edlvdfi, version
FROM df1_fi
INNER JOIN df2 ON df1_fi.cntry = df2.cntry")
inner_join_result <- sqldf("SELECT df1.ID, Name, Department FROM df1
INNER JOIN df2 ON df1.ID = df2.ID")
View(inner_join_result)
df1 <- ess %>% sample_n(sample_size)
df1$tally <- seq_along(df$Name)
df1 <- ess %>% sample_n(sample_size)
df1$tally <- seq_along(df1$Name)
View(df1)
View(df1)
df1$tally <- seq_along(df1$idno)
View(df1)
df1 <- ess %>% sample_n(sample_size)
df1$tally <- seq_along(df1$idno)
set.seed(672)
df2 <- ess %>% sample_n(sample_size)
df2$tally <- seq_along(df2$idno)
set.seed(179)
df1 <- ess %>% sample_n(sample_size)
df1$tally <- seq_along(df1$idno)
set.seed(672)
df2 <- ess %>% sample_n(sample_size)
df2$tally <- seq_along(df2$idno)
View(df1)
df1_fi <- sqldf("SELECT cntry, agea, gndr, edlvdfi, 1 AS version
FROM df1
WHERE cntry = 'FI'")
View(df1_fi)
df1_fi <- sqldf("SELECT cntry, agea, gndr, edlvdfi, 1 AS version, tally
FROM df1
WHERE cntry = 'FI'")
View(df1_fi)
View(df2)
inner_join_result <- sqldf("SELECT df1_fi.cntry, df1_fi.agea, df1_fi.gndr, df1_fi.edlvdfi, version
FROM df1_fi
INNER JOIN df2 ON df1_fi.cntry = df2.cntry")
View(inner_join_result)
View(df2)
df2_fi <- sqldf("SELECT cntry, agea, gndr, edlvdfi, 1 AS version, tally
FROM df2
WHERE cntry = 'FI'")
inner_join_result <- sqldf("SELECT df1_fi.cntry, df1_fi.agea, df1_fi.gndr, df1_fi.edlvdfi, version
FROM df1_fi
INNER JOIN df2_fi ON df1_fi.cntry = df2_fi.cntry")
df2_fi <- sqldf("SELECT cntry, agea, gndr, edlvdfi, tally
FROM df2
WHERE cntry = 'FI'")
sort(unique(df1_fi$agea))
inner_join_result <- sqldf("SELECT df1_fi.cntry, df1_fi.agea, df1_fi.gndr, df1_fi.edlvdfi, version
FROM df1_fi
INNER JOIN df2_fi ON df1_fi.cntry = df2_fi.cntry")
View(inner_join_result)
inner_join_result <- sqldf("SELECT df1_fi.cntry, df1_fi.agea, df1_fi.gndr, df1_fi.edlvdfi, version, tally
FROM df1_fi
INNER JOIN df2_fi ON df1_fi.cntry = df2_fi.cntry")
inner_join_result <- sqldf("SELECT df1_fi.cntry, df1_fi.agea, df1_fi.gndr, df1_fi.edlvdfi, version,
FROM df1_fi
INNER JOIN df2_fi ON df1_fi.tally = df2_fi.tally")
inner_join_result <- sqldf("SELECT df1_fi.cntry, df1_fi.agea, df1_fi.gndr, df1_fi.edlvdfi, version
FROM df1_fi
INNER JOIN df2_fi ON df1_fi.tally = df2_fi.tally")
View(inner_join_result)
inner_join_result <- sqldf("SELECT df1_fi.cntry, df1_fi.agea, df1_fi.gndr, df1_fi.edlvdfi, version, tally
FROM df1_fi
INNER JOIN df2_fi ON df1_fi.tally = df2_fi.tally")
inner_join_result <- sqldf("SELECT df1_fi.cntry, df1_fi.agea, df1_fi.gndr, df1_fi.edlvdfi, version, df1_fi.tally
FROM df1_fi
INNER JOIN df2_fi ON df1_fi.tally = df2_fi.tally")
View(inner_join_result)
View(df1_fi)
View(df2_fi)
left_join_result <- sqldf("SELECT df1.ID, Name, Department FROM df1
LEFT JOIN df2 ON df1.ID = df2.ID")
df1 <- data.frame(ID = c(1, 2, 3, 4, 5),
Name = c("Alice", "Bob", "Charlie", "David", "Eve"))
df2 <- data.frame(ID = c(3, 4, 6, 7, 8),
Department = c("HR", "IT", "Sales", "Finance", "Marketing"))
left_join_result <- sqldf("SELECT df1.ID, Name, Department FROM df1
LEFT JOIN df2 ON df1.ID = df2.ID")
View(left_join_result)
View(df1)
View(df2)
df3 <- data.frame(ID = c(3, 4, 6, 7, 8),
gender = c(1, 2 ,2 ,1 ,2))
View(df3)
df1 <- data.frame(ID = c(1, 2, 3, 4, 5),
name = c("Alice", "Bob", "Charlie", "David", "Eve"))
df2 <- data.frame(ID = c(3, 4, 6, 7, 8),
country = c("HR", "IT", "Sales", "Finance", "Marketing"))
df3 <- data.frame(ID = c(2, 6, 8, 4, 9),
gender = c(1, 2 ,2 ,1 ,2))
help
summary
df1 <- data.frame(ID = c(1, 2, 3, 4, 5),
Name = c("Alice", "Bob", "Charlie", "David", "Eve"))
df2 <- data.frame(ID = c(3, 4, 6, 7, 8),
Department = c("HR", "IT", "Sales", "Finance", "Marketing"))
# Inner Join
inner_join_result <- sqldf("SELECT df1.ID, Name, Department FROM df1
INNER JOIN df2 ON df1.ID = df2.ID")
View(inner_join_result)
View(df1)
View(df2)
View(inner_join_result)
inner_join_result <- sqldf("SELECT df1.ID, Name, Department FROM df1
INNER JOIN df2 ON df1.ID = df2.ID")
View(inner_join_result)
# Mock ESS data to make it simplier for illustrating conversions between dataframes
df1 <- data.frame(ID = c(1, 2, 3, 4, 5),
name = c("Alice", "Bob", "Charlie", "David", "Eve"))
df2 <- data.frame(ID = c(3, 4, 6, 7, 8),
country = c("HR", "IT", "Sales", "Finance", "Marketing"))
df3 <- data.frame(ID = c(2, 6, 8, 4, 9),
gender = c(1, 2 ,2 ,1 ,2))
View(df1)
View(df2)
View(df3)
# Mock ESS data to make it simplier for illustrating conversions between dataframes
df1 <- data.frame(ID = c(1, 2, 3, 4, 5),
name = c("John", "Sandy", "Ashley", "David", "Eve"))
df2 <- data.frame(ID = c(3, 4, 6, 7, 8),
country = c("HU", "FR", "FI", "LT", "FR"))
df3 <- data.frame(ID = c(2, 6, 8, 4, 9),
gender = c(1, 2 ,2 ,1 ,2))
library(tidyverse)
library(readxl)
library(sqldf)
library(ggthemes)
ess <- read_csv("Data/ESS10.csv", show_col_types = FALSE)
# SQL to ggplot practice
#cntry agea gndr edlvdahu (highest level education hungary)
hu_ess <- sqldf("SELECT cntry, agea, gndr, edlvdahu, hinctnta
FROM ess
WHERE cntry = 'HU' AND edlvdahu <= 14 AND hinctnta <= 10
ORDER BY agea")
#only showing disticnt ages and eduation in our dataset
sqldf("SELECT DISTINCT agea
FROM hu_ess")
sqldf("SELECT DISTINCT edlvdahu
FROM hu_ess
ORDER BY edlvdahu")
#The WHERE clause is used to filter rows before any grouping is performed in a query.
#The HAVING clause is used to filter the result set after grouping and aggregation have been performed in a query.
#Both achieve the same result
hum <- sqldf("SELECT agea, AVG(hinctnta) AS mean_income
FROM hu_ess
GROUP BY agea
HAVING agea > 20")
sqldf("SELECT agea, AVG(hinctnta) AS mean_income
FROM hu_ess
WHERE agea > 20
GROUP BY agea")
# Creating ggplot object
gg <- ggplot(hum, aes(agea, mean_income)) +
geom_point() +
geom_smooth()
# Extract the data from the smoothed curve
smooth_data <- ggplot_build(gg)$data[[2]]
# Find the maximum y value
max_y <- max(smooth_data$y)
#Finding the assoicated x value based on max_y
max_x <- smooth_data$x[which(smooth_data$y == max_y)]
# The plot
ggplot(hum, (aes(agea, mean_income))) +
geom_point() +
geom_smooth() +
labs(title = "Income by Age",
x = "Age",
y = "Mean Income") +
geom_hline(yintercept = max_y) +
geom_vline(xintercept = max_x) +
theme_base()
#Income grouped by age and gender
humm2 <- sqldf("SELECT agea, gndr, AVG(hinctnta) AS mean_income
FROM hu_ess
GROUP BY gndr, agea")
#Handling the conversion of gender into a factor variable in R instead of sql
humm2$gndr <- factor(humm2$gndr, levels = c(1, 2), labels = c("Male", "Female"))
ggplot(humm2, aes(x = agea, y = mean_income, group = gndr, color = gndr)) +
geom_point() +
geom_smooth(se = FALSE) +
labs(title = "Income Over Time by Sex (Deciles)",
x = "Age",
y = "Mean Income",
color = "Gender") +
scale_color_manual(name = NULL,
values = c("Male" = "blue", "Female" = "hotpink")) +
theme_base()
# Creating a table of average and sum earnings by education
humm3 <- sqldf("SELECT edlvdahu as education_level, AVG(hinctnta) as avg_income, SUM(hinctnta) as sum_income, STDEV(hinctnta) as std, COUNT(*) as total_obs
FROM hu_ess
GROUP BY edlvdahu")
ggplot(humm3, aes(education_level, avg_income)) +
geom_bar(stat = "identity", fill = "lightgreen", color = "black") +
labs(title = "Income by Educaion",
x = "Level of Education",
y = "Mean Income") +
theme_base()
# Mock ESS data to make it simplier for illustrating conversions between dataframes
df1 <- data.frame(ID = c(1, 2, 3, 4, 5),
name = c("John", "Sandy", "Ashley", "David", "Eve"))
df2 <- data.frame(ID = c(3, 4, 6, 7, 8),
country = c("HU", "FR", "FI", "LT", "FR"))
df3 <- data.frame(ID = c(2, 6, 8, 4, 9),
gender = c(1, 2 ,2 ,1 ,2))
#variables: cntry agea gndr edlvdahu (highest level education hungary)
# Inner join
weewoo
View(df1)
View(df2)
View(df3)
inner_join_result <- sqldf("SELECT df1.ID, name, country
FROM df1
INNER JOIN df2 ON df1.ID = df2.ID")
View(inner_join_result)
+++++
left_join_result <- sqldf("SELECT df1.ID, Name, Department FROM df1
LEFT JOIN df2 ON df1.ID = df2.ID")
df1 <- data.frame(ID = c(1, 2, 3, 4, 5),
Name = c("Alice", "Bob", "Charlie", "David", "Eve"))
df2 <- data.frame(ID = c(3, 4, 6, 7, 8),
Department = c("HR", "IT", "Sales", "Finance", "Marketing"))
left_join_result <- sqldf("SELECT df1.ID, Name, Department FROM df1
LEFT JOIN df2 ON df1.ID = df2.ID")
View(left_join_result)
left_join_result <- sqldf("SELECT df1.ID, name, country
FROM df1
LEFT JOIN df2 ON df1.ID = df2.ID")
df1 <- data.frame(ID = c(1, 2, 3, 4, 5),
name = c("John", "Sandy", "Ashley", "David", "Eve"))
df2 <- data.frame(ID = c(3, 4, 6, 7, 8),
country = c("HU", "FR", "FI", "LT", "FR"))
df3 <- data.frame(ID = c(2, 6, 8, 4, 9),
gender = c(1, 2 ,2 ,1 ,2))
left_join_result <- sqldf("SELECT df1.ID, name, country
FROM df1
LEFT JOIN df2 ON df1.ID = df2.ID")
View(left_join_result)
df1 <- data.frame(ID = c(1, 2, 3, 4, 5),
Name = c("Alice", "Bob", "Charlie", "David", "Eve"))
df2 <- data.frame(ID = c(3, 4, 6, 7, 8),
Department = c("HR", "IT", "Sales", "Finance", "Marketing"))
right_join_result <- sqldf("SELECT df1.ID, Name, Department FROM df1
RIGHT JOIN df2 ON df1.ID = df2.ID")
View(right_join_result)
right_join_result <- sqldf("SELECT df1.ID, name, country
FROM df1
RIGHT JOIN df2 ON df1.ID = df2.ID")
# Mock ESS data to make it simplier for illustrating conversions between dataframes
df1 <- data.frame(ID = c(1, 2, 3, 4, 5),
name = c("John", "Sandy", "Ashley", "David", "Eve"))
df2 <- data.frame(ID = c(3, 4, 6, 7, 8),
country = c("HU", "FR", "FI", "LT", "FR"))
df3 <- data.frame(ID = c(2, 6, 8, 4, 9),
gender = c(1, 2 ,2 ,1 ,2))
right_join_result <- sqldf("SELECT df1.ID, name, country
FROM df1
RIGHT JOIN df2 ON df1.ID = df2.ID")
View(right_join_result)
View(right_join_result)
df1 <- data.frame(ID = c(1, 2, 3, 4, 5),
Name = c("Alice", "Bob", "Charlie", "David", "Eve"))
df2 <- data.frame(ID = c(3, 4, 6, 7, 8),
Department = c("HR", "IT", "Sales", "Finance", "Marketing"))
# Full Outer Join
full_outer_join_result <- sqldf("SELECT IFNULL(df1.ID, df2.ID) AS ID, Name, Department FROM df1
FULL OUTER JOIN df2 ON df1.ID = df2.ID")
View(full_outer_join_result)
# Mock ESS data to make it simplier for illustrating conversions between dataframes
df1 <- data.frame(ID = c(1, 2, 3, 4, 5),
name = c("John", "Sandy", "Ashley", "David", "Eve"))
df2 <- data.frame(ID = c(3, 4, 6, 7, 8),
country = c("HU", "FR", "FI", "LT", "FR"))
df3 <- data.frame(ID = c(2, 6, 8, 4, 9),
gender = c(1, 2 ,2 ,1 ,2))
full_outer_join_result <- sqldf("SELECT IFNULL(df1.ID, df2.ID) AS ID, name, country
FROM df1
FULL OUTER JOIN df2 ON df1.ID = df2.ID")
View(full_outer_join_result)
View(inner_join_result)
inner_join_result <- sqldf("SELECT df1.ID, name, country
FROM df1
INNER JOIN df2 ON df1.ID = df2.ID
INNER JOIN df3 ON df1.ID = df3.ID")
View(inner_join_result)
inner_join_result <- sqldf("SELECT df1.ID, name, country
FROM df1
INNER JOIN df2 ON df1.ID = df2.ID
INNER JOIN df3 ON df1.ID = df3.ID")
full_outer_join_result3 <- sqldf("SELECT IFNULL(df1.ID, df2.ID) AS ID, name, country
FROM df1
FULL OUTER JOIN df2 ON df1.ID = df2.ID
FULL OUTER JOIN df3 ON df1.ID = df3.ID")
View(full_outer_join_result3)
full_outer_join_result3 <- sqldf("SELECT IFNULL(df1.ID, df2.ID, df3.ID) AS ID, name, country
FROM df1
FULL OUTER JOIN df2 ON df1.ID = df2.ID
FULL OUTER JOIN df3 ON df1.ID = df3.ID")
full_outer_join_result <- sqldf("SELECT IFNULL(df1.ID, df2.ID, df3.ID) AS ID, name, country, gender
FROM df1
FULL OUTER JOIN df2 ON df1.ID = df2.ID
FULL OUTER JOIN df3 ON df1.ID = df3.ID")
full_outer_join_result3 <- sqldf("SELECT IFNULL(df1.ID, IFNULL(df2.ID, df3.ID)) AS ID, name, country, gender
FROM df1
FULL OUTER JOIN df2 ON df1.ID = df2.ID
FULL OUTER JOIN df3 ON df1.ID = df3.ID OR df2.ID = df3.ID")
View(full_outer_join_result3)
